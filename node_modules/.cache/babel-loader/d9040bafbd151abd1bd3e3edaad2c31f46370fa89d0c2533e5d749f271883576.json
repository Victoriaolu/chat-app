{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000'); //  server URL\nfunction App() {\n  _s();\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit('message', currentMessage);\n      setCurrentMessage('');\n    }\n  };\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message...\",\n      value: currentMessage,\n      onChange: e => setCurrentMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vuev0HbKlTJm5NO4G16zNOG8sWw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","currentMessage","setCurrentMessage","sendMessage","emit","on","message","prevMessages","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000'); //  server URL\nfunction App() {\n  // State for storing messages and current message\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  // Function to send a message\n  const sendMessage = () => {\n    if (currentMessage) {\n      socket.emit('message', currentMessage);\n      setCurrentMessage('');\n    }\n  };\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type a message...\"\n        value={currentMessage}\n        onChange={(e) => setCurrentMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;AAC5C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,cAAc,EAAE;MAClBL,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAEH,cAAc,CAAC;MACtCC,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EACDV,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACS,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MAChCN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAKa,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBV,QAAQ,CAACW,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBAC3BhB,OAAA;QAAiBa,SAAS,EAAC,SAAS;QAAAC,QAAA,EACjCH;MAAO,GADAK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEjB,cAAe;MACtBkB,QAAQ,EAAGC,CAAC,IAAKlB,iBAAiB,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFpB,OAAA;MAAQ2B,OAAO,EAAEnB,WAAY;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACjB,EAAA,CAnCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}